{
  "formatVersion": 1,
  "database": {
    "version": 9,
    "identityHash": "2c65b70a8430efeba11d700af7e9b053",
    "entities": [
      {
        "tableName": "User",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `uuid` TEXT NOT NULL, `email` TEXT NOT NULL, `emailIsConfirmed` INTEGER NOT NULL, `firstName` TEXT NOT NULL, `lastName` TEXT NOT NULL, `canReceiveFunds` INTEGER NOT NULL, `profilePhotoUrl` TEXT, `profilePhotoUploadCompleted` INTEGER NOT NULL, `profilePhotoSha256Hash` TEXT, `coverPhotoUploadCompleted` INTEGER NOT NULL, `coverPhotoSha256Hash` TEXT, `dateTimeCreated` TEXT NOT NULL, `addressOne` TEXT, `addressTwo` TEXT, `city` TEXT, `state` TEXT, `postalCode` TEXT, `preSignedPhotoDownloadUrl` TEXT, `preSignedCoverPhotoDownloadUrl` TEXT, `acceptedTermsOfService` INTEGER NOT NULL, `acceptedPrivacyPolicy` INTEGER NOT NULL, `linkTokens` TEXT NOT NULL, `dwollaReverificationNeeded` INTEGER NOT NULL, `isAuthenticatedUser` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "uuid",
            "columnName": "uuid",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "emailIsConfirmed",
            "columnName": "emailIsConfirmed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "firstName",
            "columnName": "firstName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastName",
            "columnName": "lastName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "canReceiveFunds",
            "columnName": "canReceiveFunds",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "profilePhotoUrl",
            "columnName": "profilePhotoUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "profilePhotoUploadCompleted",
            "columnName": "profilePhotoUploadCompleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "profilePhotoSha256Hash",
            "columnName": "profilePhotoSha256Hash",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coverPhotoUploadCompleted",
            "columnName": "coverPhotoUploadCompleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coverPhotoSha256Hash",
            "columnName": "coverPhotoSha256Hash",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateTimeCreated",
            "columnName": "dateTimeCreated",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "addressOne",
            "columnName": "addressOne",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "addressTwo",
            "columnName": "addressTwo",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "city",
            "columnName": "city",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "postalCode",
            "columnName": "postalCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "preSignedPhotoDownloadUrl",
            "columnName": "preSignedPhotoDownloadUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "preSignedCoverPhotoDownloadUrl",
            "columnName": "preSignedCoverPhotoDownloadUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "acceptedTermsOfService",
            "columnName": "acceptedTermsOfService",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "acceptedPrivacyPolicy",
            "columnName": "acceptedPrivacyPolicy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "linkTokens",
            "columnName": "linkTokens",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "dwollaReverificationNeeded",
            "columnName": "dwollaReverificationNeeded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isAuthenticatedUser",
            "columnName": "isAuthenticatedUser",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "user_account",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `userId` INTEGER NOT NULL, `accountId` TEXT NOT NULL, `accountName` TEXT NOT NULL, `accountSubType` TEXT NOT NULL, `accountType` TEXT NOT NULL, `institutionId` TEXT NOT NULL, `institutionName` TEXT NOT NULL, `isActive` INTEGER NOT NULL, `hasRemovedFundingSource` INTEGER NOT NULL, `dwollaFundingSourceId` TEXT, `dateOfLastPlaidTransactionPull` TEXT, `plaidLinkToken` TEXT, `dateTimePlaidLinkTokenExpires` TEXT, `requiresPlaidReAuthentication` INTEGER NOT NULL, `institution` TEXT NOT NULL, `linkTokens` TEXT NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`userId`) REFERENCES `User`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "accountName",
            "columnName": "accountName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "accountSubType",
            "columnName": "accountSubType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "accountType",
            "columnName": "accountType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "institutionId",
            "columnName": "institutionId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "institutionName",
            "columnName": "institutionName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hasRemovedFundingSource",
            "columnName": "hasRemovedFundingSource",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dwollaFundingSourceId",
            "columnName": "dwollaFundingSourceId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateOfLastPlaidTransactionPull",
            "columnName": "dateOfLastPlaidTransactionPull",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "plaidLinkToken",
            "columnName": "plaidLinkToken",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateTimePlaidLinkTokenExpires",
            "columnName": "dateTimePlaidLinkTokenExpires",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "requiresPlaidReAuthentication",
            "columnName": "requiresPlaidReAuthentication",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "institution",
            "columnName": "institution",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkTokens",
            "columnName": "linkTokens",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_user_account_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_user_account_userId` ON `${TABLE_NAME}` (`userId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "User",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "agreement",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `authenticatedUserId` INTEGER NOT NULL, `story` TEXT NOT NULL, `dateTime` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`authenticatedUserId`) REFERENCES `User`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "authenticatedUserId",
            "columnName": "authenticatedUserId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "story",
            "columnName": "story",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "dateTime",
            "columnName": "dateTime",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_agreement_authenticatedUserId",
            "unique": false,
            "columnNames": [
              "authenticatedUserId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_agreement_authenticatedUserId` ON `${TABLE_NAME}` (`authenticatedUserId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "User",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "authenticatedUserId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "agreement_transaction",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `authenticatedUserId` INTEGER NOT NULL, `story` TEXT NOT NULL, `dateTime` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`authenticatedUserId`) REFERENCES `User`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "authenticatedUserId",
            "columnName": "authenticatedUserId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "story",
            "columnName": "story",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "dateTime",
            "columnName": "dateTime",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_agreement_transaction_authenticatedUserId",
            "unique": false,
            "columnNames": [
              "authenticatedUserId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_agreement_transaction_authenticatedUserId` ON `${TABLE_NAME}` (`authenticatedUserId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "User",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "authenticatedUserId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "Vendor",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `uuid` TEXT NOT NULL, `ppdId` TEXT, `dateTimeAdded` TEXT, `dateTimeModified` TEXT, `totalNumberOfExpenseSharingAgreements` INTEGER NOT NULL, `hasBeenReviewedInternally` INTEGER NOT NULL, `vendorIdentityCannotBeDetermined` INTEGER NOT NULL, `friendlyName` TEXT NOT NULL, `logoS3Bucket` TEXT, `logoS3Key` TEXT, `logoUrl` TEXT, `logoUploadCompleted` INTEGER NOT NULL, `logoSha256Hash` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "uuid",
            "columnName": "uuid",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "ppdId",
            "columnName": "ppdId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateTimeAdded",
            "columnName": "dateTimeAdded",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateTimeModified",
            "columnName": "dateTimeModified",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "totalNumberOfExpenseSharingAgreements",
            "columnName": "totalNumberOfExpenseSharingAgreements",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hasBeenReviewedInternally",
            "columnName": "hasBeenReviewedInternally",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "vendorIdentityCannotBeDetermined",
            "columnName": "vendorIdentityCannotBeDetermined",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "friendlyName",
            "columnName": "friendlyName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "logoS3Bucket",
            "columnName": "logoS3Bucket",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "logoS3Key",
            "columnName": "logoS3Key",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "logoUrl",
            "columnName": "logoUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "logoUploadCompleted",
            "columnName": "logoUploadCompleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "logoSha256Hash",
            "columnName": "logoSha256Hash",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Relationship",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` INTEGER NOT NULL, `relatedToUserId` INTEGER NOT NULL, `id` INTEGER NOT NULL, `uuid` TEXT NOT NULL, `email` TEXT NOT NULL, `emailIsConfirmed` INTEGER NOT NULL, `firstName` TEXT NOT NULL, `lastName` TEXT NOT NULL, `canReceiveFunds` INTEGER NOT NULL, `profilePhotoUrl` TEXT, `profilePhotoUploadCompleted` INTEGER NOT NULL, `profilePhotoSha256Hash` TEXT, `coverPhotoUploadCompleted` INTEGER NOT NULL, `coverPhotoSha256Hash` TEXT, `dateTimeCreated` TEXT NOT NULL, `addressOne` TEXT, `addressTwo` TEXT, `city` TEXT, `state` TEXT, `postalCode` TEXT, `preSignedPhotoDownloadUrl` TEXT, `preSignedCoverPhotoDownloadUrl` TEXT, `acceptedTermsOfService` INTEGER NOT NULL, `acceptedPrivacyPolicy` INTEGER NOT NULL, `linkTokens` TEXT NOT NULL, `dwollaReverificationNeeded` INTEGER NOT NULL, `isAuthenticatedUser` INTEGER NOT NULL, PRIMARY KEY(`userId`, `relatedToUserId`))",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "relatedToUserId",
            "columnName": "relatedToUserId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "user.id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "user.uuid",
            "columnName": "uuid",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "user.email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "user.emailIsConfirmed",
            "columnName": "emailIsConfirmed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "user.firstName",
            "columnName": "firstName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "user.lastName",
            "columnName": "lastName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "user.canReceiveFunds",
            "columnName": "canReceiveFunds",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "user.profilePhotoUrl",
            "columnName": "profilePhotoUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.profilePhotoUploadCompleted",
            "columnName": "profilePhotoUploadCompleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "user.profilePhotoSha256Hash",
            "columnName": "profilePhotoSha256Hash",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.coverPhotoUploadCompleted",
            "columnName": "coverPhotoUploadCompleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "user.coverPhotoSha256Hash",
            "columnName": "coverPhotoSha256Hash",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.dateTimeCreated",
            "columnName": "dateTimeCreated",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "user.addressOne",
            "columnName": "addressOne",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.addressTwo",
            "columnName": "addressTwo",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.city",
            "columnName": "city",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.postalCode",
            "columnName": "postalCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.preSignedPhotoDownloadUrl",
            "columnName": "preSignedPhotoDownloadUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.preSignedCoverPhotoDownloadUrl",
            "columnName": "preSignedCoverPhotoDownloadUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.acceptedTermsOfService",
            "columnName": "acceptedTermsOfService",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "user.acceptedPrivacyPolicy",
            "columnName": "acceptedPrivacyPolicy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "user.linkTokens",
            "columnName": "linkTokens",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "user.dwollaReverificationNeeded",
            "columnName": "dwollaReverificationNeeded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "user.isAuthenticatedUser",
            "columnName": "isAuthenticatedUser",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "userId",
            "relatedToUserId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '2c65b70a8430efeba11d700af7e9b053')"
    ]
  }
}