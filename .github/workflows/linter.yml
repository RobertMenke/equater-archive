name: Lint

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

on:
  push:
    branches:
      - '**'
      - '!main' # Branch should only be merged into following a successful build
      - '!staging' # Branch should only be merged into following a successful build

jobs:
  lint-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.13.0
        uses: actions/setup-node@v2
        with:
          node-version: '18.9.1'
      # Only run tests when typescript files have changed
      - uses: dorny/paths-filter@v2.10.2
        id: filter
        with:
          filters: |
            ts:
              - '**/*.ts'
      - name: Lint API
        if: ${{ steps.filter.outputs.ts == 'true' }}
        run: make check/api

  lint-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 18.9.1
        uses: actions/setup-node@v2
        with:
          node-version: '18.9.1'
      # Only run tests when typescript files have changed
      - uses: dorny/paths-filter@v2.10.2
        id: filter
        with:
          filters: |
            ts:
              - '**/*.ts'
      - name: Lint Web
        if: ${{ steps.filter.outputs.ts == 'true' }}
        run: make check/web

  lint-kotlin:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '11'
      # - name: Setup Android SDK
      #   uses: android-actions/setup-android@v2
      # Only run tests when kotlin files have changed
      - uses: dorny/paths-filter@v2.10.2
        id: filter
        with:
          filters: |
            kt:
              - '**/*.kt'
      - name: Set up gradle.properties
        if: ${{ steps.filter.outputs.kt == 'true' }}
        run: |
          mkdir -p ~/.gradle
          aws s3api get-object --bucket equater-ci-config --key gradle.properties ~/.gradle/gradle.properties
      - name: Lint Kotlin
        if: ${{ steps.filter.outputs.kt == 'true' }}
        run: make check/android

  lint-swift:
    runs-on: macos-latest
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - uses: actions/checkout@v2
      - uses: swift-actions/setup-swift@v1
      # Only run tests when swift files have changed
      - uses: dorny/paths-filter@v2.10.2
        id: filter
        with:
          filters: |
            swift:
              - '**/*.swift'
      - name: Setup Homebrew
        if: ${{ steps.filter.outputs.swift == 'true' }}
        run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      - name: Install Swiftformat
        if: ${{ steps.filter.outputs.swift == 'true' }}
        run: brew install swiftformat
      - name: Lint Swift
        if: ${{ steps.filter.outputs.swift == 'true' }}
        run: make check/ios

  lint-rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly version of Rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy
      # Only run tests when rust files have changed
      - uses: dorny/paths-filter@v2.10.2
        id: filter
        with:
          filters: |
            rs:
              - '**/*.rs'
      - name: Lint Rust
        if: ${{ steps.filter.outputs.rs == 'true' }}
        run: make check/cli
